"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _express = _interopRequireDefault(require("express"));
var _communityController = require("../controllers/communityController.js");
var _protectRoute = _interopRequireDefault(require("../middleware/protectRoute.js"));
var router = _express["default"].Router();
router.use(_protectRoute["default"]);
router.post("/", _communityController.createCommunity);
router.get("/my-communities", _communityController.getMyCommunities);
router.get("/created-by-me", _communityController.getCommunitiesCreatedByMe);
router.get("/joined-by-me", _communityController.getCommunitiesJoinedByMe);
router.get("/:id", _communityController.getCommunity);
router.get("/", _communityController.getAllCommunities);
router.put("/:id", _communityController.updateCommunity);
router["delete"]("/:id", _communityController.deleteCommunity);
router.post("/join/:id", _communityController.joinCommunity);
router.put("/leave/:id", _communityController.leaveCommunity);
router.get("/:id/posts", _communityController.getCommunityPosts);
router.post("/:id/post", _communityController.addPost);
router.put("/:id/add-member", _communityController.addMember);
router.get("/:id/pending-members", _communityController.getPendingMembers);
router.put("/:id/approve-members", _communityController.approvePendingMember);
var _default = router;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2NvbW11bml0eUNvbnRyb2xsZXIiLCJfcHJvdGVjdFJvdXRlIiwicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsInByb3RlY3QiLCJwb3N0IiwiY3JlYXRlQ29tbXVuaXR5IiwiZ2V0IiwiZ2V0TXlDb21tdW5pdGllcyIsImdldENvbW11bml0aWVzQ3JlYXRlZEJ5TWUiLCJnZXRDb21tdW5pdGllc0pvaW5lZEJ5TWUiLCJnZXRDb21tdW5pdHkiLCJnZXRBbGxDb21tdW5pdGllcyIsInB1dCIsInVwZGF0ZUNvbW11bml0eSIsImRlbGV0ZUNvbW11bml0eSIsImpvaW5Db21tdW5pdHkiLCJsZWF2ZUNvbW11bml0eSIsImdldENvbW11bml0eVBvc3RzIiwiYWRkUG9zdCIsImFkZE1lbWJlciIsImdldFBlbmRpbmdNZW1iZXJzIiwiYXBwcm92ZVBlbmRpbmdNZW1iZXIiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvcm91dGVycy9jb21tdW5pdHlSb3V0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuaW1wb3J0IHtcbiAgYWRkTWVtYmVyLFxuICBhZGRQb3N0LFxuICBjcmVhdGVDb21tdW5pdHksXG4gIGRlbGV0ZUNvbW11bml0eSxcbiAgZ2V0QWxsQ29tbXVuaXRpZXMsXG4gIGdldENvbW11bml0aWVzQ3JlYXRlZEJ5TWUsXG4gIGdldENvbW11bml0aWVzSm9pbmVkQnlNZSxcbiAgZ2V0Q29tbXVuaXR5LFxuICBhcHByb3ZlUGVuZGluZ01lbWJlcixcbiAgZ2V0Q29tbXVuaXR5UG9zdHMsXG4gIGdldE15Q29tbXVuaXRpZXMsXG4gIGdldFBlbmRpbmdNZW1iZXJzLFxuICBqb2luQ29tbXVuaXR5LFxuICBsZWF2ZUNvbW11bml0eSxcbiAgdXBkYXRlQ29tbXVuaXR5LFxufSBmcm9tIFwiLi4vY29udHJvbGxlcnMvY29tbXVuaXR5Q29udHJvbGxlci5qc1wiO1xuaW1wb3J0IHByb3RlY3QgZnJvbSBcIi4uL21pZGRsZXdhcmUvcHJvdGVjdFJvdXRlLmpzXCI7XG5cbnJvdXRlci51c2UocHJvdGVjdCk7XG5cbnJvdXRlci5wb3N0KFwiL1wiLCBjcmVhdGVDb21tdW5pdHkpO1xucm91dGVyLmdldChcIi9teS1jb21tdW5pdGllc1wiLCBnZXRNeUNvbW11bml0aWVzKTtcbnJvdXRlci5nZXQoXCIvY3JlYXRlZC1ieS1tZVwiLCBnZXRDb21tdW5pdGllc0NyZWF0ZWRCeU1lKTtcbnJvdXRlci5nZXQoXCIvam9pbmVkLWJ5LW1lXCIsIGdldENvbW11bml0aWVzSm9pbmVkQnlNZSk7XG5yb3V0ZXIuZ2V0KFwiLzppZFwiLCBnZXRDb21tdW5pdHkpO1xucm91dGVyLmdldChcIi9cIiwgZ2V0QWxsQ29tbXVuaXRpZXMpO1xucm91dGVyLnB1dChcIi86aWRcIiwgdXBkYXRlQ29tbXVuaXR5KTtcbnJvdXRlci5kZWxldGUoXCIvOmlkXCIsIGRlbGV0ZUNvbW11bml0eSk7XG5yb3V0ZXIucG9zdChcIi9qb2luLzppZFwiLCBqb2luQ29tbXVuaXR5KTtcbnJvdXRlci5wdXQoXCIvbGVhdmUvOmlkXCIsIGxlYXZlQ29tbXVuaXR5KTtcbnJvdXRlci5nZXQoXCIvOmlkL3Bvc3RzXCIsIGdldENvbW11bml0eVBvc3RzKTtcbnJvdXRlci5wb3N0KFwiLzppZC9wb3N0XCIsIGFkZFBvc3QpO1xucm91dGVyLnB1dChcIi86aWQvYWRkLW1lbWJlclwiLCBhZGRNZW1iZXIpO1xucm91dGVyLmdldChcIi86aWQvcGVuZGluZy1tZW1iZXJzXCIsIGdldFBlbmRpbmdNZW1iZXJzKTtcbnJvdXRlci5wdXQoXCIvOmlkL2FwcHJvdmUtbWVtYmVyc1wiLCBhcHByb3ZlUGVuZGluZ01lbWJlcik7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUFBLFFBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUdBLElBQUFDLG9CQUFBLEdBQUFELE9BQUE7QUFpQkEsSUFBQUUsYUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBbkJBLElBQU1HLE1BQU0sR0FBR0MsbUJBQU8sQ0FBQ0MsTUFBTSxDQUFDLENBQUM7QUFxQi9CRixNQUFNLENBQUNHLEdBQUcsQ0FBQ0Msd0JBQU8sQ0FBQztBQUVuQkosTUFBTSxDQUFDSyxJQUFJLENBQUMsR0FBRyxFQUFFQyxvQ0FBZSxDQUFDO0FBQ2pDTixNQUFNLENBQUNPLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRUMscUNBQWdCLENBQUM7QUFDL0NSLE1BQU0sQ0FBQ08sR0FBRyxDQUFDLGdCQUFnQixFQUFFRSw4Q0FBeUIsQ0FBQztBQUN2RFQsTUFBTSxDQUFDTyxHQUFHLENBQUMsZUFBZSxFQUFFRyw2Q0FBd0IsQ0FBQztBQUNyRFYsTUFBTSxDQUFDTyxHQUFHLENBQUMsTUFBTSxFQUFFSSxpQ0FBWSxDQUFDO0FBQ2hDWCxNQUFNLENBQUNPLEdBQUcsQ0FBQyxHQUFHLEVBQUVLLHNDQUFpQixDQUFDO0FBQ2xDWixNQUFNLENBQUNhLEdBQUcsQ0FBQyxNQUFNLEVBQUVDLG9DQUFlLENBQUM7QUFDbkNkLE1BQU0sVUFBTyxDQUFDLE1BQU0sRUFBRWUsb0NBQWUsQ0FBQztBQUN0Q2YsTUFBTSxDQUFDSyxJQUFJLENBQUMsV0FBVyxFQUFFVyxrQ0FBYSxDQUFDO0FBQ3ZDaEIsTUFBTSxDQUFDYSxHQUFHLENBQUMsWUFBWSxFQUFFSSxtQ0FBYyxDQUFDO0FBQ3hDakIsTUFBTSxDQUFDTyxHQUFHLENBQUMsWUFBWSxFQUFFVyxzQ0FBaUIsQ0FBQztBQUMzQ2xCLE1BQU0sQ0FBQ0ssSUFBSSxDQUFDLFdBQVcsRUFBRWMsNEJBQU8sQ0FBQztBQUNqQ25CLE1BQU0sQ0FBQ2EsR0FBRyxDQUFDLGlCQUFpQixFQUFFTyw4QkFBUyxDQUFDO0FBQ3hDcEIsTUFBTSxDQUFDTyxHQUFHLENBQUMsc0JBQXNCLEVBQUVjLHNDQUFpQixDQUFDO0FBQ3JEckIsTUFBTSxDQUFDYSxHQUFHLENBQUMsc0JBQXNCLEVBQUVTLHlDQUFvQixDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUUxQ3ZCLE1BQU07QUFBQXdCLE9BQUEsY0FBQUQsUUFBQSJ9